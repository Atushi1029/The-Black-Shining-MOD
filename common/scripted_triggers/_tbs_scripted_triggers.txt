can_ROOT_get_wargoal_on_THIS = {
	exists = yes
	NOT = { is_in_faction_with = ROOT }
	NOT = { is_subject_of = ROOT }
}
is_border_conflict_defender_vs_FROM = {
	has_variable = ROOT.defender_state_vs_@FROM
}
has_not_initiated_border_incident_with_FROM = {
	custom_trigger_tooltip = {
		tooltip = not_initiated_border_incident_with_FROM
		NOT = {
			any_state = {
				check_variable = { FROM.defender_state_vs_@PREV = id }
			}
		}
	}
}
has_not_initiated_border_incident_with_ROOT = {
	custom_trigger_tooltip = {
		tooltip = not_initiated_border_incident_with_ROOT
		NOT = {
			any_state = {
				check_variable = { ROOT.defender_state_vs_@PREV = id }
			}
		}
	}
}
has_ROOT_at_least_1_div_in_current_state_scope = {
	custom_trigger_tooltip = {
		tooltip = at_least_one_division_in_state
		ROOT = { divisions_in_state = { state = PREV size > 0 } }
	}
}
is_controlled_by_ROOT_or_subject = {
	custom_trigger_tooltip = {
		tooltip = is_controlled_by_ROOT_or_subject
		CONTROLLER = {
			OR = {
				tag = ROOT
				is_subject_of = ROOT
			}
		}
	}
}
is_free_or_subject_of_root = {
	OR = {
		is_subject = no
		is_subject_of = ROOT
	}
}
is_controlled_by_ROOT_or_ally = {
	custom_trigger_tooltip = {
		tooltip = is_controlled_by_ROOT_or_ally
		CONTROLLER = {
			OR = {
				tag = ROOT
				is_subject_of = ROOT
				is_in_faction_with = ROOT
			}
		}
	}
}
has_naval_treaty_trigger = {
	
}
ai_air_doctrine_tier_1_trigger = {
	
}
ai_air_doctrine_tier_2_trigger = {
	
}
ai_air_doctrine_tier_3_trigger = {
	
}
ai_land_doctrine_tier_1_trigger = {
	
}
ai_land_doctrine_tier_2_trigger = {
	
}
anti_submarine_strategy_required_trigger = {
	
}
has_large_ally_not_pick_closed_economy = {
	any_of_scopes = {
		array = faction_members
		NOT = { tag = PREV }
		num_of_military_factories > 30
	}
}
is_ally_of_ROOT = {
	NOT = {
		tag = ROOT
	}
	exists = yes
	OR = {
		is_in_faction_with = ROOT
		is_subject_of = ROOT
		ROOT = {
			is_subject_of = PREV
		}
	}
}
is_valid_peace_target = {
	is_subject = no
	OR = {
		is_in_faction = no
		is_faction_leader = yes
	}
}
is_ally_of_PREV = {
	NOT = {
		tag = PREV
	}
	exists = yes
	OR = {
		is_in_faction_with = PREV
		is_subject_of = PREV
		PREV = {
			is_subject_of = PREV
		}
	}
}
is_owned_by_ROOT_or_subject = {
	owner = {
		OR = {
			tag = ROOT
			is_subject_of = ROOT
		}
	}
}
is_controlled_by_ROOT_or_ally = {
	controller = {
		is_in_faction_with = ROOT
	}
}
is_owned_by_ROOT_or_ally = {
	owner = {
		is_in_faction_with = ROOT
	}
}
is_owned_by_ROOT_or_war_ally = {
	owner = {
		OR = {
			is_in_faction_with = ROOT
			has_war_together_with = ROOT
		}
	}
}
is_controlled_by_ROOT_or_subject = {
	controller = {
		OR = {
			tag = ROOT
			is_subject_of = ROOT
		}
	}
}
is_owned_and_controlled_by_ROOT_or_subject = {
	owner = {
		controls_state = PREV
		OR = {
			tag = ROOT
			is_subject_of = ROOT
		}
	}
}
is_owned_and_controlled_by_ROOT_or_ally = {
	owner = {
		controls_state = PREV
		is_in_faction_with = ROOT
	}
}
is_actual_neighbor_of_ROOT_or_ally = {
	any_neighbor_country = {
		is_owner_neighbor_of = PREV
		is_in_faction_with = ROOT
	}
}
is_claim_or_core_or_ambition_of_ROOT = {
	OR = {
		is_claimed_by = ROOT
		is_core_of = ROOT
	}
}
is_claim_or_core_or_ambition_of_PREV = {
	OR = {
		is_claimed_by = PREV
		is_core_of = PREV
	}
}
is_claim_or_core_of_ROOT = {
	OR = {
		is_claimed_by = ROOT
		is_core_of = ROOT
	}
}
is_claim_or_core_of_FROM = {
	OR = {
		is_claimed_by = FROM
		is_core_of = FROM
	}
}
is_not_claim_or_core_of_ROOT = {
	NOT = {
		is_claimed_by = ROOT
		is_core_of = ROOT
	}
}
is_not_claim_or_core_of_FROM = {
	NOT = {
		is_claimed_by = FROM
		is_core_of = FROM
	}
}
is_claim_or_core_of_PREV = {
	OR = {
		is_claimed_by = PREV
		is_core_of = PREV
	}
}
is_not_claim_or_core_of_PREV = {
	NOT = {
		is_claimed_by = PREV
		is_core_of = PREV
	}
}
is_controlled_by_myself_or_allies = {
	OR = {
		is_controlled_by = ROOT
		controller = {
			is_in_faction_with = ROOT
		}
		controller = {
			is_subject_of = ROOT
		}
	}
}
is_controlled_by_myself_or_subject = {
	OR = {
		is_controlled_by = ROOT
		controller = {
			is_subject_of = ROOT
		}
	}
}
is_owned_by_myself_or_subject = {
	OR = {
		is_owned_by = ROOT
		owner = {
			is_subject_of = ROOT
		}
	}
}
owns_or_subject_of = {
	custom_trigger_tooltip = {
		tooltip = owns_or_subject_of_tt
		owner = {
			OR = {
				tag = ROOT
				is_subject_of = ROOT
			}
		}
	}
}
controls_or_subject_of = {
	custom_trigger_tooltip = {
		tooltip = controls_or_subject_of_tt
		controller = {
			OR = {
				tag = ROOT
				is_subject_of = ROOT
			}
		}
	}
}
is_core_or_compliance_60 = {
	custom_trigger_tooltip = {
		tooltip = is_core_or_compliance_60_tt
		OR = {
			controller = {
				PREV = { is_core_of = PREV }
			}
			compliance > 60
		}
	}
}
has_specialist_level_trigger = {
	skill > 5
	skill < 6
}
has_expert_level_trigger = {
	skill > 6
	skill < 7
}
has_genius_level_trigger = {
	skill > 7
}
set_num_volunteers = {
	hidden_effect = {
		meta_effect = { 
			text = { set_country_flag = may_send_volunteers_to_[TARGET] }
			TARGET = "[?target.GetTag]"
		}
		if = {
			limit = { check_variable = { number = 0 } }
			clear_num_volunteers = yes
		}
		else = {
			if = {
				limit = { NOT = { is_in_array = { array = volunteers_tags value = target } } }
				add_to_array = { volunteers_tags = target }
				add_to_array = { volunteers_amounts = number }
			}
			else = {
				for_loop_effect = {
					start = 0
					end = volunteers_tags^num
					value = i
					if = {
						limit = { check_variable = { volunteers_tags^i = target } }
						set_variable = { volunteers_amounts^i = number }
					}
				}
			}
		}
		get_num_volunteers = yes
		set_variable = { test_additional_volunteers = result }
		update_volunteers_idea = yes
		ai_reload_volunteers_sent = yes
	}
}
add_num_volunteers = {
	hidden_effect = {
		set_temp_variable = { target_idx = -1 }
		meta_effect = { 
			text = { set_country_flag = may_send_volunteers_to_[TARGET] }
			TARGET = "[?target.GetTag]"
		}
		if = {
			limit = { NOT = { is_in_array = { array = volunteers_tags value = target } } }
			add_to_array = { volunteers_tags = target }
			add_to_array = { volunteers_amounts = to_add }
			if = {
				limit = { NOT = { is_in_array = { array = global.volunteer_nations value = THIS } } }
				add_to_array = { global.volunteer_nations = THIS }
			}
		}
		else = {
			for_loop_effect = {
				start = 0
				end = volunteers_tags^num
				value = i
				if = {
					limit = { check_variable = { volunteers_tags^i = target } }
					add_to_variable = { volunteers_amounts^i = to_add }
					clamp_variable = { var = volunteers_amounts^i min = 0}
					if = {
						limit = { check_variable = { volunteers_amounts^i = 0 } }
						set_temp_variable = { target_idx = i }
					}
				}
			}
		}
		if = {
			limit = { check_variable = { target_idx > -1 } }
			remove_from_array = { array = volunteers_tags index = target_idx }
			remove_from_array = { array = volunteers_amounts index = target_idx }
			if = {
				limit = { check_variable = { volunteers_tags^num = 0 } }
				remove_from_array = { array = global.volunteer_nations value = THIS }
			}
		}
		get_num_volunteers = yes
		set_variable = { test_additional_volunteers = result }
		force_update_dynamic_modifier  = yes
		update_volunteers_idea = yes
		ai_reload_volunteers_sent = yes
	}
	custom_effect_tooltip = add_num_volunteers_tt
}
sub_num_volunteers = {
	set_temp_variable = { to_add = to_sub }
	multiply_temp_variable = { to_add = -1 }
	add_num_volunteers = yes
}
increase_volunteer_cap_1 = {
	set_temp_variable = { to_add = 1 }
	add_num_volunteers = yes
}
increase_volunteer_cap_2 = {
	set_temp_variable = { to_add = 2 }
	add_num_volunteers = yes
}
increase_volunteer_cap_3 = {
	set_temp_variable = { to_add = 3 }
	add_num_volunteers = yes
}
increase_volunteer_cap_4 = {
	set_temp_variable = { to_add = 4 }
	add_num_volunteers = yes
}
decrease_volunteer_cap_1 = {
	set_temp_variable = { to_add = -1 }
	add_num_volunteers = yes
}
decrease_volunteer_cap_2 = {
	set_temp_variable = { to_add = -2 }
	add_num_volunteers = yes
}
decrease_volunteer_cap_3 = {
	set_temp_variable = { to_add = -3 }
	add_num_volunteers = yes
}
decrease_volunteer_cap_4 = {
	set_temp_variable = { to_add = -4 }
	add_num_volunteers = yes
}
get_num_volunteers = {
	if = {
		limit = { NOT = { is_in_array = { array = volunteers_tags value = target } } }
		set_temp_variable = { result = 0 }
	}
	else = {
		for_loop_effect = {
			start = 0
			end = volunteers_tags^num
			value = i
			if = {
				limit = { check_variable = { volunteers_tags^i = target } }
				set_temp_variable = { result = volunteers_amounts^i }
			}
		}
	}
}
log_num_volunteers = {
	get_num_volunteers = yes
	log = "[?result]"
}
clear_and_recall_volunteers = {
	clear_num_volunteers = yes
	recall_volunteers_from = target
	meta_effect = { 
		text = { clr_country_flag = may_send_volunteers_to_[TARGET] }
		TARGET = "[?target.GetTag]"
	}
}
clear_num_volunteers = {
	hidden_effect = {
		set_temp_variable = { target_idx = -1 }
		for_loop_effect = {
			start = 0
			end = volunteers_tags^num
			value = i
			if = {
				limit = { check_variable = { volunteers_tags^i = target } }
				set_temp_variable = { target_idx = i }
			}
		}
		if = {
			limit = { check_variable = { target_idx > -1 } }
			remove_from_array = { array = volunteers_tags index = target_idx }
			remove_from_array = { array = volunteers_amounts index = target_idx }
		}
		update_volunteers_idea = yes
		meta_effect = { 
			text = { clr_country_flag = may_send_volunteers_to_[TARGET] }
			TARGET = "[?target.GetTag]"
		}
		get_num_volunteers = yes
		set_variable = { test_additional_volunteers = result }
	}
}
update_volunteers_idea = {
	
}
test = {
	
}
ai_reload_volunteers_sent = {
	
}
